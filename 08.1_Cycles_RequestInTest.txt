/* 
TESTS:
1. Получить список валют
2. Итерировать список валют
3. В каждой итерации отправлять запрос на сервер для получения курса каждой валюты
4. Если возвращается 500 код, переходим к следующей итреации
5. Если получаем 200 код, проверяем response json на наличие поля "Cur_OfficialRate"
6. Если поле есть, пишем в консоль инфу про фалюту в виде response
{
    "Cur_Abbreviation": str
    "Cur_ID": int,
    "Cur_Name": str,
    "Cur_OfficialRate": float,
    "Cur_Scale": int,
    "Date": str
}
7. Переходим к следующей итерации

REQUEST:
Метод: POST
Body: auth_token

RESPONSE:
Передаётся список массив объектов.
[
{"Cur_Abbreviation": str,
 "Cur_ID": int,
 "Cur_Name": str
}
…
{"Cur_Abbreviation": str,
 "Cur_ID": int,
 "Cur_Name": str
}
]
*/

//Решение:
let jsonData = pm.response.json();
let arr = jsonData;

for ( let i = 0; i < arr.length; i++ ) { 
    
    let currencyObj = arr[i];
    let currencyArr = Object.values(currencyObj);
    let currencyID = currencyArr[1];
    
        pm.sendRequest({
            url: 'http://116.203.27.46:5002/curr_byn',
            method: 'POST',
            headers: {},
            body: {
                mode: 'formdata',
                formdata: [
                    {key: 'auth_token', value: pm.environment.get("token")},
                    {key: 'curr_code', value: currencyID}
                ] 
            }

        }, function(err, res) {
            let statusCode = Object.values(res)[3];
            if (statusCode === 200) {
                let resultCurrency = res.json();
                if ('undefined' !== typeof resultCurrency.Cur_OfficialRate) {
                    console.log(resultCurrency);
                }       
            } 
        }); 
};
