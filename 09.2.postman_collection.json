{
	"info": {
		"_postman_id": "27359690-41af-4e59-bb7d-b490c8816218",
		"name": "EquivalenceClassAndBoundaryValue2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "age_europe_0-17 (underage)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 0-17\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [10, '0', 17];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_europe',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        //console.log(res);\r",
							"        //console.log(Object.values(res));\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('underage');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('underageContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('underageContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_europe",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_europe"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_europe_18-50 (adult)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 18-50\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [25, 18, 50];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_europe',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('adult');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('adultContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('adultContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "21",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_europe",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_europe"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_europe_51-100 (antiquity)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 51-100\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [70, 51, 100];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_europe',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('antiquity');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('antiquityContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('antiquityContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "75",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_europe",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_europe"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_europe_Negative (Status 500)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на Status 500\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим все, что должно вызвать Status 500)\r",
							"\r",
							"let arr = ['', ' ', -1, 101, 1000, -1000, 0.5, '0,5', 'abc', '.', '/', '?', ':', '-', '+', '=', '#', '$', '%', '&', ',', '?', '@', '\"', ';', '*'];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_europe',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        pm.test('Age value: ' + testData, function () {\r",
							"            pm.expect(res).to.have.property('code', 500);\r",
							"        });\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "10",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_europe",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_europe"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_usa_0-20 (underage)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 0-20\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [10, '0', 20];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_usa',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        //console.log(res);\r",
							"        //console.log(Object.values(res));\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('underage');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('underageContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('underageContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "10",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_usa",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_usa"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_usa_21-50 (adult)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 21-50\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [25, 21, 50, 22, 49];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_usa',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('adult');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('adultContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('adultContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "21",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_usa",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_usa"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_usa_51-100 (antiquity)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка класса эквивалентности 51-100\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим значение из класс, а так же краиние значения класса. Крайние значения соседнего класса проверяются в других тестах).\r",
							"\r",
							"let arr = [70, 51, 100];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_usa',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        let statusCode = Object.values(res)[3];\r",
							"            \r",
							"            if (statusCode === 200) {\r",
							"                let resType = res.json();\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(resType.age_type).to.include('antiquity');\r",
							"                });\r",
							"                pm.environment.set('content', resType.content);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                    pm.expect(pm.environment.get('antiquityContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"                \r",
							"            } else {\r",
							"                pm.test('Age value: ' + testData, function () {\r",
							"                pm.expect(res).to.have.property('code', 200);   \r",
							"                });\r",
							"                pm.environment.set('content', null);\r",
							"                pm.test('Content with : ' + testData, function () {\r",
							"                pm.expect(pm.environment.get('antiquityContent')).to.include(pm.environment.get('content'));\r",
							"                });\r",
							"            };  \r",
							"        });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "75",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_usa",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_usa"
					]
				}
			},
			"response": []
		},
		{
			"name": "age_usa_Negative (Status 500)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Проверка на Status 500\r",
							"// Введите в массив через запятую тестовые данные\r",
							"// (Вводим все, что должно вызвать Status 500)\r",
							"\r",
							"let arr = ['', ' ', -1, 101, 1000, -1000, 0.5, '0,5', 'abc', '.', '/', '?', ':', '-', '+', '=', '#', '$', '%', '&', ',', '?', '@', '\"', ';', '*'];\r",
							"\r",
							"let index;\r",
							"for (index = 0; index < arr.length; ++index) {\r",
							"    let testData = arr[index];\r",
							"    pm.sendRequest({\r",
							"        url: 'http://116.203.27.46:5002/age_usa',\r",
							"        method: 'POST',\r",
							"        headers: {},\r",
							"        body: {\r",
							"            mode: 'formdata',\r",
							"            formdata: [\r",
							"                {key: 'age', value: arr[index]}\r",
							"            ] \r",
							"        }   \r",
							"    }, function(err, res) {\r",
							"        console.log('Age value: ' + testData);\r",
							"        pm.test('Age value: ' + testData, function () {\r",
							"            pm.expect(res).to.have.property('code', 500);\r",
							"        });\r",
							"    });\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "10",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}/age_usa",
					"host": [
						"{{url}}"
					],
					"path": [
						"age_usa"
					]
				}
			},
			"response": []
		}
	]
}